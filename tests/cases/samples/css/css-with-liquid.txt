---
Testing Liquid infused CSS formatting. All contained syntax should respect indentations when encapsulated in Liquid tags. Liquid objects provided as CSS properties should also be respected.
---

{{ settings.type_body_font | font_face: font_display: 'swap' }}
{{ body_font_bold | font_face: font_display: 'swap' }}
{{ body_font_italic | font_face: font_display: 'swap' }}
{{ body_font_bold_italic | font_face: font_display: 'swap' }}
{{ settings.type_header_font | font_face: font_display: 'swap' }}

:root {
  --font-body-family:
    {{ settings.type_body_font.family }},
    {{ settings.type_body_font.fallback_families }};

  {% unless x and y == 'something' %}
  --font-body-style: {{ settings.type_body_font.style }};
  --font-body-weight: {{ settings.type_body_font.weight }};
  --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};
  --font-heading-style: {{ settings.type_header_font.style }};
  --font-heading-weight: {{ settings.type_header_font.weight }};
{% endunless %}

  --gradient-base-background-1: {% if settings.gradient_background_1 != blank %}{{ settings.gradient_background_1 }}{% else %}{{ settings.colors_background_1 }}{% endif %};
  --gradient-base-background-2: {% if settings.gradient_background_2 != blank %}{{ settings.gradient_background_2 }}{% else %}{{ settings.colors_background_2 }}{% endif %};
  --gradient-base-accent-1: {% if settings.gradient_accent_1 != blank %}{{ settings.gradient_accent_1 }}{% else %}{{ settings.colors_accent_1 }}{% endif %};
  --gradient-base-accent-2: {% if settings.gradient_accent_2 != blank %}{{ settings.gradient_accent_2 }}{% else %}{{ settings.colors_accent_2 }}{% endif %};

  --media-padding: {{ settings.media_padding }}px;
  --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
  --media-border-width: {{ settings.media_border_thickness }}px;
  --media-radius: {{ settings.media_radius }}px;
  --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
  --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
  --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
  --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
  --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};
}


.class1 {
width: auto;
}

.class {
width: auto;

font-size: {{ some | append: '' }};
color: aliceblue;
background: {{ something.prop }};
font-size: {{ product }};
background-color: aliceblue;
}

{% if condition and bar %}
.some > .class {
  width: 100px;
  background: {{ something.prop }};
  font-size: 120px;
}
{% endif %}



body {
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
-webkit-overflow-scrolling: touch;
color: red;
}

main {
height: 100vh;
}

h1 {
font-weight:
{{ something.prop | filter: 'foo' }};
font-size:
{{ something.prop | filter: 'foo' }};
line-height: 4.2rem;
}

p {
font-weight: 400;
color: rgb(211, 211, 211);
font-size: 1.1rem;
font-family:
{{ something.prop | filter: 'foo' }};
}
